{{!-- Copyright 2022, Yahoo Holdings Inc. Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms. --}}
{{yield (queue (toggle "showModal" this) this.onOpen)}}
<DenaliModal
  @isOpen={{this.showModal}}
  @onClose={{queue this.closeModal this.revertAll}}
  class="schedule__modal"
  ...attributes
  as |Modal|
>
  <Modal.Header>
    <h3 class="schedule__modal-header">Schedule {{capitalize this.modelType}}</h3>
  </Modal.Header>
  <Modal.Content class="p-0">
    {{#if (or (is-pending this.isValidForSchedule) (is-pending (object-at 0 this.deliveryRules)))}}
      <div class="row">
        <NaviLoader />
      </div>
    {{else}}
      <div class="row flex">
        <div class="schedule__modal-delivery-list sm-col-1-1 col-2-5 p-x-0">
          <div class="schedule__modal-new-delivery w-full">
            <DenaliButton
              @style="text"
              @size="large"
              class="w-full p-x-24"
              {{on "click" this.addNewRule}}
            >
              <DenaliIcon @icon="add-circle" />
              New Schedule
            </DenaliButton>
          </div>
          <DenaliSidebar class="has-bg-white w-full" as |Sidebar|>
            {{#each this.deliveryRules as |deliveryRule|}}
              <Sidebar.Tab
	                @isActive={{eq this.currentDisplayedRule deliveryRule}}
	                {{on "click" (fn (mut this.currentDisplayedRule) deliveryRule)}}
	              >
                <div class="w-full flex space-between align-items-center">
                  <span>{{deliveryRule.name}}</span>
                  <DenaliIcon
                    @icon="trash"
                    @size="small"
                    class="delete__{{deliveryRule.name}}"
                    {{on "click" (fn this.doDelete deliveryRule)}}
                  />
                </div>
              </Sidebar.Tab>
            {{/each}}
          </DenaliSidebar>
        </div>
        <div class="sm-col-1-1 col-3-5 p-0">
          <div class="schedule__modal-options p-24">
            {{#if this.notification}}
              <DenaliAlert
                @style="danger"
                @isBlock={{true}}
                class="m-b-30"
                as |Alert|
              >
                <Alert.Title>Error</Alert.Title>
                {{#each this.notification as |message|}}
                  <Alert.Context>{{message}}</Alert.Context>
                {{/each}}
              </DenaliAlert>
            {{/if}}
            {{!-- enable creation of a new delivery rule only if valid --}}
            {{#if (and this.currentDisplayedRule.isNew (not (await this.isValidForSchedule)))}}
              <DenaliAlert
                @style="danger"
                @isBlock={{true}}
                class="m-b-30"
                as |Alert|
              >
                <Alert.Context>
                  Unable to schedule invalid {{this.modelType}}. Please fix errors before proceeding.
                </Alert.Context>
              </DenaliAlert>
            {{else}}
                {{#if (eq this.currentDisplayedRule undefined)}}
                  <div class="schedule__modal-no-schedule">
                    <DenaliIcon class="flex justify-content-center m-t-200" @size="large" @icon="calendar-event" />
                    <h3 class="flex justify-content-center">Let's Jump Right In!</h3>
                    <p class="flex justify-content-center">You currently have no schedules for this {{this.modelType}}.</p>
                    <DenaliButton
                      @style="text"
                      @size="large"
                      class="w-full schedule__modal-no-schedule-new-delivery"
                      {{on "click" this.addNewRule}}
                    >
                      <DenaliIcon @icon="add-circle" />
                      New Schedule
                    </DenaliButton>
                  </div>
                {{else}}
                  <DenaliInputGroup @isStacked={{true}} @label="Schedule Name" class="m-b-30">
                    <DenaliInput 
                      @wrapperClass="w-full" 
                      type="text" 
                      placeholder="Schedule Name (Optional)"
                      class="schedule__modal-name"
                      value={{unless this.currentDisplayedRule.name this.currentDisplayedRule.name this.defaultName}}
                      {{on "input" (pipe (pick "target.value") (fn (mut this.currentDisplayedRule.name) ) )}}
                    />
                      <div class="schedule__modal-helper-name is-grey-800">
                        Please enter a custom name for this schedule.
                      </div>
                  </DenaliInputGroup>
                  <DenaliInputGroup @label="Delivery" @isStacked={{true}}>
                    <PowerSelect
                      class="w-full"
                      @triggerClass="schedule__modal-delivery-trigger w-full"
                      @dropdownClass="w-full"
                      @options={{this.deliveryOptions}}
                      @selected={{this.currentDisplayedRule.delivery}}
                      @renderInPlace={{true}}
                      @onChange={{fn (mut this.currentDisplayedRule.delivery)}}
                      as | delivery |
                    >
                      {{capitalize delivery}}
                    </PowerSelect>
                    <div class="schedule__modal-helper-delivery m-b-30 is-grey-800">
                      {{#if (eq this.currentDisplayedRule.delivery "email")}}
                        Send this  {{this.modelType}} in an email on a recurring basis
                      {{else}}
                        Schedule and cache this {{this.modelType}} without delivery
                      {{/if}}
                    </div>
                  </DenaliInputGroup>
                  {{#if (eq this.currentDisplayedRule.delivery "email")}}
                    <DenaliInputGroup
                      @label="Recipients"
                      @isStacked={{true}}
                      class="{{unless this.isRuleValid "schedule__modal-recipients--invalid"}} m-b-30"
                    >
                      <NaviEmailInput
                        class="schedule__modal-input--recipients w-full"
                        @emails={{readonly this.currentDisplayedRule.recipients}}
                        @onUpdateEmails={{this.updateRecipients}}
                        @isDisabled={{this.errorWhileFetchingRules}}
                      />
                      <div class="schedule__modal-helper-recipients is-grey-800">
                        Please enter valid email addresses separated by commas.
                      </div>
                    </DenaliInputGroup>
                    <DenaliInputGroup @label="Format" class="m-b-30">
                      <PowerSelect
                        class="w-full"
                        @triggerClass="schedule__modal-format-trigger w-full"
                        @dropdownClass="w-full"
                        @disabled={{lt this.formats.length 2}}
                        @options={{this.formats}}
                        @selected={{this.currentDisplayedRule.format.type}}
                        @searchEnabled={{false}}
                        @onChange={{this.updateFormat}}
                        @renderInPlace={{true}}
                        as | format |
                      >
                        {{format}}
                      </PowerSelect>
                    </DenaliInputGroup>
                  {{/if}}
                  <DenaliInputGroup @label="Frequency" class="m-b-30">
                    <PowerSelect
                      class="w-full"
                      @triggerClass="schedule__modal-frequency-trigger w-full"
                      @dropdownClass="w-full"
                      @options={{this.frequencies}}
                      @selected={{this.currentDisplayedRule.frequency}}
                      @disabled={{this.errorWhileFetchingRules}}
                      @searchEnabled={{false}}
                      @onChange={{fn (mut this.currentDisplayedRule.frequency)}}
                      @renderInPlace={{true}}
                      as | frequency |
                    >
                      {{capitalize frequency}}
                    </PowerSelect>
                  </DenaliInputGroup>
                  {{#if (and (feature-flag "enabledNotifyIfData") (eq this.currentDisplayedRule.delivery "email"))}}
                    <DenaliInputGroup @label="Only send if data is present" class="m-b-30">
                      <DenaliSwitch
                        class="schedule__modal-must-have-data-toggle"
                        @isEnabled={{this.currentDisplayedRule.schedulingRules.mustHaveData}}
                        @onChange={{toggle "mustHaveData" this.currentDisplayedRule.schedulingRules}}/>
                    </DenaliInputGroup>
                  {{/if}}

                  {{#if (includes this.currentDisplayedRule.format.type this.overwriteableFormats)}}
                    <DenaliInputGroup @label="Overwrite spreadsheet" class="schedule__modal-overwrite">
                      <DenaliSwitch
                        class="schedule__modal-overwrite-toggle"
                        @isEnabled={{this.currentDisplayedRule.format.options.overwriteFile}}
                        @onChange={{this.toggleOverwriteFile}}/>
                    </DenaliInputGroup>
                    <p class="help-text m-b-30 is-grey-800">
                      {{#if this.currentDisplayedRule.format.options.overwriteFile}}
                        Data will be replaced in the same sheet every {{this.currentDisplayedRule.frequency}}
                      {{else}}
                        A new sheet will be created every {{this.currentDisplayedRule.frequency}}
                      {{/if}}
                    </p>
                  {{/if}}
                  <DenaliInputGroup @label="Status" class="m-b-30 align-items-center">
                    <DenaliSwitch
                      class="schedule__modal-disabled-status"
                      @isEnabled={{not this.currentDisplayedRule.isDisabled}}
                      @onChange={{toggle "isDisabled" this.currentDisplayedRule}}
                      @onLabel="Active"
                      @offLabel="Paused"
                    />
                  </DenaliInputGroup>
                {{/if}}
              {{/if}}
              {{#if this.currentDisplayedRule}}
                <div class="schedule__modal-buttons w-full p-24">
                  {{#if (or (and this.currentDisplayedRule.isNew (not (await this.isValidForSchedule))) this.errorWhileFetchingRules)}}
                    <DenaliButton
                      class="schedule__modal-cancel-btn m-r-5"
                      @style="ghost"
                      disabled={{this.isSaving}}
                      type="button"
                      {{on "click" (queue this.closeModal this.revertAll)}}
                    > Cancel
                    </DenaliButton>
                  {{else}}
                    <DenaliButton
                      class="schedule__modal-save-btn m-r-5"
                      disabled={{this.disableSave}}
                      isLoading={{this.isSaving}}
                      {{on "click" (queue (toggle "isSaving" this) this.doSave)}}
                    >
                      Save
                    </DenaliButton>
                    <DenaliButton
                      class="schedule__modal-cancel-btn m-r-5"
                      disabled={{this.isSaving}}
                      @style="ghost"
                      type="button"
                      {{on "click" (queue this.closeModal this.revertAll)}}
                    >
                      Cancel
                    </DenaliButton>
                  {{/if}}
                  {{#unless this.currentDisplayedRule.isNew}}
                    <CommonActions::Delete
                      @model={{this.currentDisplayedRule}}
                      @deleteAction={{queue (fn this.doDelete this.currentDisplayedRule) this.closeModal}}
                      as |onDelete|
                    >
                      <DenaliButton
                        disabled={{this.isSaving}}
                        @style="text"
                        @size="medium"
                        class="schedule__modal-delete-btn"
                        {{on "click" onDelete}}
                      >
                        Delete
                      </DenaliButton>
                    </CommonActions::Delete>
                  {{/unless}}
                </div>
              {{/if}}
          </div>
        </div>
      </div>
    {{/if}}
  </Modal.Content>
</DenaliModal>